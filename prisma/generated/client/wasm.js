
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  phone: 'phone',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DriverProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  regionId: 'regionId',
  rating: 'rating',
  status: 'status'
};

exports.Prisma.AdminProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name'
};

exports.Prisma.ClientProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name'
};

exports.Prisma.CarScalarFieldEnum = {
  id: 'id',
  driverId: 'driverId',
  vehicle_type_id: 'vehicle_type_id',
  brand: 'brand',
  model: 'model',
  year: 'year',
  color: 'color',
  license_plate: 'license_plate',
  verification_status: 'verification_status'
};

exports.Prisma.VehicleMediaScalarFieldEnum = {
  id: 'id',
  carId: 'carId',
  url: 'url',
  type: 'type',
  createdAt: 'createdAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  clientId: 'clientId',
  regionId: 'regionId',
  driverId: 'driverId',
  car_id: 'car_id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  luggage_standard: 'luggage_standard',
  luggage_small: 'luggage_small',
  name: 'name',
  from_address: 'from_address',
  to_address: 'to_address',
  distance: 'distance',
  price: 'price',
  currency: 'currency',
  status: 'status',
  trip_datetime: 'trip_datetime',
  notes: 'notes',
  passenger_count: 'passenger_count',
  flight_number: 'flight_number'
};

exports.Prisma.RatingScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  driverId: 'driverId',
  clientId: 'clientId',
  score: 'score',
  comment: 'comment',
  createdAt: 'createdAt'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  driverId: 'driverId',
  type: 'type',
  file_url: 'file_url',
  status: 'status',
  expires_at: 'expires_at'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  action: 'action',
  target_entity: 'target_entity',
  target_id: 'target_id',
  created_at: 'created_at'
};

exports.Prisma.RegionScalarFieldEnum = {
  id: 'id',
  parent_id: 'parent_id',
  name: 'name',
  type: 'type',
  latitude: 'latitude',
  longitude: 'longitude'
};

exports.Prisma.VehicleTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  max_passengers: 'max_passengers',
  max_luggage_standard: 'max_luggage_standard',
  max_luggage_small: 'max_luggage_small'
};

exports.Prisma.RegionTranslationScalarFieldEnum = {
  id: 'id',
  region_id: 'region_id',
  locale: 'locale',
  name: 'name'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  USER: 'USER',
  DRIVER: 'DRIVER',
  ADMIN: 'ADMIN',
  SUPERADMIN: 'SUPERADMIN'
};

exports.DocumentStatus = exports.$Enums.DocumentStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.VehicleVerificationStatus = exports.$Enums.VehicleVerificationStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  NEW: 'NEW',
  ACCEPTED: 'ACCEPTED',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.RegionType = exports.$Enums.RegionType = {
  COUNTRY: 'COUNTRY',
  CITY: 'CITY',
  AIRPORT: 'AIRPORT',
  LOCATION: 'LOCATION'
};

exports.MediaType = exports.$Enums.MediaType = {
  PHOTO: 'PHOTO',
  VIDEO: 'VIDEO'
};

exports.DocumentType = exports.$Enums.DocumentType = {
  DRIVERS_LICENSE: 'DRIVERS_LICENSE',
  VEHICLE_REGISTRATION: 'VEHICLE_REGISTRATION',
  SELFIE_WITH_LICENSE: 'SELFIE_WITH_LICENSE'
};

exports.Prisma.ModelName = {
  User: 'User',
  DriverProfile: 'DriverProfile',
  AdminProfile: 'AdminProfile',
  ClientProfile: 'ClientProfile',
  Car: 'Car',
  VehicleMedia: 'VehicleMedia',
  Order: 'Order',
  Rating: 'Rating',
  Document: 'Document',
  AuditLog: 'AuditLog',
  Region: 'Region',
  VehicleType: 'VehicleType',
  RegionTranslation: 'RegionTranslation'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Влад\\Desktop\\TakeTransfer\\backend\\prisma\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Влад\\Desktop\\TakeTransfer\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"generated/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum UserRole {\n  USER\n  DRIVER\n  ADMIN\n  SUPERADMIN\n}\n\nenum DocumentStatus {\n  PENDING\n  APPROVED\n  REJECTED\n}\n\nenum VehicleVerificationStatus {\n  PENDING\n  APPROVED\n  REJECTED\n}\n\nenum OrderStatus {\n  NEW\n  ACCEPTED\n  IN_PROGRESS\n  COMPLETED\n  CANCELLED\n}\n\nenum RegionType {\n  COUNTRY\n  CITY\n  AIRPORT\n  LOCATION\n}\n\nenum MediaType {\n  PHOTO\n  VIDEO\n}\n\nenum DocumentType {\n  DRIVERS_LICENSE\n  VEHICLE_REGISTRATION\n  SELFIE_WITH_LICENSE\n}\n\nmodel User {\n  id        String   @id @default(cuid())\n  email     String   @unique\n  password  String\n  phone     String?  @unique\n  role      UserRole\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  driverProfile DriverProfile?\n  adminProfile  AdminProfile?\n  clientProfile ClientProfile?\n}\n\nmodel DriverProfile {\n  id     String @id @default(cuid())\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId String @unique\n\n  name     String?\n  region   Region? @relation(fields: [regionId], references: [id])\n  regionId String?\n  rating   Float   @default(5.0)\n  status   Int     @default(0)\n\n  cars      Car[]\n  documents Document[]\n  orders    Order[]\n  ratings   Rating[]\n}\n\nmodel AdminProfile {\n  id     String @id @default(cuid())\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId String @unique\n\n  name String?\n\n  audit_logs AuditLog[]\n}\n\nmodel ClientProfile {\n  id     String @id @default(cuid())\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId String @unique\n\n  name String?\n\n  orders  Order[]\n  ratings Rating[]\n}\n\nmodel Car {\n  id                  String                    @id @default(cuid())\n  driver              DriverProfile             @relation(fields: [driverId], references: [id])\n  driverId            String\n  vehicle_type        VehicleType               @relation(fields: [vehicle_type_id], references: [id])\n  vehicle_type_id     String\n  brand               String\n  model               String\n  year                Int\n  color               String?\n  license_plate       String                    @unique\n  verification_status VehicleVerificationStatus @default(PENDING)\n  orders              Order[]\n  media               VehicleMedia[]\n}\n\nmodel VehicleMedia {\n  id        String    @id @default(cuid())\n  car       Car       @relation(fields: [carId], references: [id], onDelete: Cascade)\n  carId     String\n  url       String\n  type      MediaType\n  createdAt DateTime  @default(now())\n}\n\nmodel Order {\n  id       String         @id @default(cuid())\n  client   ClientProfile? @relation(fields: [clientId], references: [id])\n  clientId String?\n\n  region   Region? @relation(fields: [regionId], references: [id])\n  regionId String?\n\n  driver   DriverProfile? @relation(fields: [driverId], references: [id])\n  driverId String?\n  car      Car?           @relation(fields: [car_id], references: [id])\n  car_id   String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  luggage_standard Int @default(0)\n  luggage_small    Int @default(0)\n\n  name            String?\n  from_address    String      @db.Text\n  to_address      String      @db.Text\n  distance        Float?\n  price           Decimal     @db.Decimal(10, 2)\n  currency        String      @default(\"EUR\")\n  status          OrderStatus @default(NEW)\n  trip_datetime   DateTime\n  notes           String?     @db.Text\n  passenger_count Int\n  flight_number   String?\n  rating          Rating?\n}\n\nmodel Rating {\n  id        String        @id @default(cuid())\n  order     Order         @relation(fields: [order_id], references: [id])\n  order_id  String        @unique\n  driver    DriverProfile @relation(fields: [driverId], references: [id])\n  driverId  String\n  client    ClientProfile @relation(fields: [clientId], references: [id])\n  clientId  String\n  score     Int\n  comment   String?       @db.Text\n  createdAt DateTime      @default(now())\n}\n\nmodel Document {\n  id         String         @id @default(cuid())\n  driver     DriverProfile  @relation(fields: [driverId], references: [id])\n  driverId   String\n  type       DocumentType\n  file_url   String\n  status     DocumentStatus @default(PENDING)\n  expires_at DateTime?\n\n  @@unique([driverId, type])\n}\n\nmodel AuditLog {\n  id            String       @id @default(cuid())\n  admin         AdminProfile @relation(fields: [adminId], references: [id])\n  adminId       String\n  action        String\n  target_entity String?\n  target_id     String?\n  created_at    DateTime     @default(now())\n}\n\nmodel Region {\n  id           String              @id @default(cuid())\n  parent       Region?             @relation(\"RegionHierarchy\", fields: [parent_id], references: [id])\n  parent_id    String?\n  name         String\n  type         RegionType\n  latitude     Float?\n  longitude    Float?\n  children     Region[]            @relation(\"RegionHierarchy\")\n  drivers      DriverProfile[]\n  translations RegionTranslation[]\n  orders       Order[]\n}\n\nmodel VehicleType {\n  id                   String @id @default(cuid())\n  name                 String @unique\n  max_passengers       Int\n  max_luggage_standard Int\n  max_luggage_small    Int\n  cars                 Car[]\n}\n\nmodel RegionTranslation {\n  id        String @id @default(cuid())\n  region    Region @relation(fields: [region_id], references: [id])\n  region_id String\n  locale    String\n  name      String\n\n  @@unique([region_id, locale])\n}\n",
  "inlineSchemaHash": "a925877f0302629cbe87bc1c76cefca11e138d6d9287bf21fcf8572d06924717",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"driverProfile\",\"kind\":\"object\",\"type\":\"DriverProfile\",\"relationName\":\"DriverProfileToUser\"},{\"name\":\"adminProfile\",\"kind\":\"object\",\"type\":\"AdminProfile\",\"relationName\":\"AdminProfileToUser\"},{\"name\":\"clientProfile\",\"kind\":\"object\",\"type\":\"ClientProfile\",\"relationName\":\"ClientProfileToUser\"}],\"dbName\":null},\"DriverProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DriverProfileToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"region\",\"kind\":\"object\",\"type\":\"Region\",\"relationName\":\"DriverProfileToRegion\"},{\"name\":\"regionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cars\",\"kind\":\"object\",\"type\":\"Car\",\"relationName\":\"CarToDriverProfile\"},{\"name\":\"documents\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DocumentToDriverProfile\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"DriverProfileToOrder\"},{\"name\":\"ratings\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"DriverProfileToRating\"}],\"dbName\":null},\"AdminProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AdminProfileToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"audit_logs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AdminProfileToAuditLog\"}],\"dbName\":null},\"ClientProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClientProfileToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"ClientProfileToOrder\"},{\"name\":\"ratings\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"ClientProfileToRating\"}],\"dbName\":null},\"Car\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"driver\",\"kind\":\"object\",\"type\":\"DriverProfile\",\"relationName\":\"CarToDriverProfile\"},{\"name\":\"driverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vehicle_type\",\"kind\":\"object\",\"type\":\"VehicleType\",\"relationName\":\"CarToVehicleType\"},{\"name\":\"vehicle_type_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"year\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"license_plate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verification_status\",\"kind\":\"enum\",\"type\":\"VehicleVerificationStatus\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"CarToOrder\"},{\"name\":\"media\",\"kind\":\"object\",\"type\":\"VehicleMedia\",\"relationName\":\"CarToVehicleMedia\"}],\"dbName\":null},\"VehicleMedia\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"car\",\"kind\":\"object\",\"type\":\"Car\",\"relationName\":\"CarToVehicleMedia\"},{\"name\":\"carId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"MediaType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"ClientProfile\",\"relationName\":\"ClientProfileToOrder\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"region\",\"kind\":\"object\",\"type\":\"Region\",\"relationName\":\"OrderToRegion\"},{\"name\":\"regionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"driver\",\"kind\":\"object\",\"type\":\"DriverProfile\",\"relationName\":\"DriverProfileToOrder\"},{\"name\":\"driverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"car\",\"kind\":\"object\",\"type\":\"Car\",\"relationName\":\"CarToOrder\"},{\"name\":\"car_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"luggage_standard\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"luggage_small\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"from_address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"to_address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"distance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"trip_datetime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passenger_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"flight_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"OrderToRating\"}],\"dbName\":null},\"Rating\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToRating\"},{\"name\":\"order_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"driver\",\"kind\":\"object\",\"type\":\"DriverProfile\",\"relationName\":\"DriverProfileToRating\"},{\"name\":\"driverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"ClientProfile\",\"relationName\":\"ClientProfileToRating\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Document\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"driver\",\"kind\":\"object\",\"type\":\"DriverProfile\",\"relationName\":\"DocumentToDriverProfile\"},{\"name\":\"driverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"DocumentType\"},{\"name\":\"file_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DocumentStatus\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"AdminProfile\",\"relationName\":\"AdminProfileToAuditLog\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"target_entity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"target_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Region\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Region\",\"relationName\":\"RegionHierarchy\"},{\"name\":\"parent_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"RegionType\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"Region\",\"relationName\":\"RegionHierarchy\"},{\"name\":\"drivers\",\"kind\":\"object\",\"type\":\"DriverProfile\",\"relationName\":\"DriverProfileToRegion\"},{\"name\":\"translations\",\"kind\":\"object\",\"type\":\"RegionTranslation\",\"relationName\":\"RegionToRegionTranslation\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToRegion\"}],\"dbName\":null},\"VehicleType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"max_passengers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"max_luggage_standard\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"max_luggage_small\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cars\",\"kind\":\"object\",\"type\":\"Car\",\"relationName\":\"CarToVehicleType\"}],\"dbName\":null},\"RegionTranslation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"region\",\"kind\":\"object\",\"type\":\"Region\",\"relationName\":\"RegionToRegionTranslation\"},{\"name\":\"region_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locale\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

